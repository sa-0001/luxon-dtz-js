// Generated by CoffeeScript 1.12.7
var _, class_methods, instance_methods, luxon, regexIsoDatetime;

_ = {
  assign: require('lodash/assign')
};

luxon = require('luxon');

regexIsoDatetime = /^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(\.[0-9]{1,3})?(Z|[+-][\d]{2}|[+-][\d]{2}:[\d]{2})?$/;

class_methods = ['fromFormat', 'fromHTTP', 'fromISO', 'fromJSDate', 'fromMillis', 'fromObject', 'fromRFC2822', 'fromSeconds', 'fromSQL'];

class_methods.forEach(function(method) {
  var original_fn;
  original_fn = luxon.DateTime[method];
  return luxon.DateTime[method] = function() {
    var dt, ref, ref1;
    if (method === 'fromISO') {
      if (typeof arguments[0] === 'string' && !regexIsoDatetime.test(arguments[0])) {
        throw Error("Invalid ISO format: " + arguments[0]);
      }
    }
    dt = original_fn.apply(luxon.DateTime, arguments);
    if (dt.invalid) {
      throw Error("Invalid DateTime: " + (((ref = dt.invalid) != null ? ref.explanation : void 0) || ((ref1 = dt.invalid) != null ? ref1.reason : void 0)));
    }
    return dt.toUTC();
  };
});

instance_methods = ['setZone'];

instance_methods.forEach(function(method) {
  var original_fn;
  original_fn = luxon.DateTime.prototype[method];
  return luxon.DateTime.prototype[method] = function() {
    var dt, ref, ref1;
    dt = original_fn.apply(this, arguments);
    if (dt.invalid) {
      throw Error("Invalid DateTime: " + (((ref = dt.invalid) != null ? ref.explanation : void 0) || ((ref1 = dt.invalid) != null ? ref1.reason : void 0)));
    }
    if (!dt.zoneName) {
      throw Error("Invalid DateTime: invalid timezone " + arguments[0]);
    }
    return dt;
  };
});

_.assign(luxon.DateTime, {
  now: luxon.DateTime.utc
});

_.assign(luxon.DateTime.prototype, {});

_.assign(luxon.DateTime, {
  nowISO: function() {
    return new Date().toISOString();
  },
  nowMillis: function() {
    return Date.now();
  }
});

_.assign(luxon.DateTime.prototype, {});

_.assign(luxon.DateTime, {
  Duration: luxon.Duration,
  Info: luxon.Info,
  Interval: luxon.Interval,
  Settings: luxon.Settings,
  Zone: luxon.Zone
});

module.exports = luxon.DateTime;
